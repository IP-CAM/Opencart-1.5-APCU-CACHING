<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<id>Advanced Caching</id>
	<version>1.0.0</version>
	<vqmver>2.4.1</vqmver>
	<author>Stergios Zgouletas</author>
	<file path="catalog/model/catalog/product.php">
		<operation>
		  <search position="replace"><![CDATA[public function getProduct(]]></search>
		  <add><![CDATA[public function getProductOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getProductOld(]]></search>
		  <add><![CDATA[
	function getBaseCache()
	{
		if ($this->customer->isLogged()) {
			$customer_group_id = $this->customer->getCustomerGroupId();
		} else {
			$customer_group_id = $this->config->get('config_customer_group_id');
		}
		return (int)$this->config->get('config_language_id').'.'.(int)$this->config->get('config_store_id').'.'.$customer_group_id;
	}
	
	public function checkCache($callFunc,$param1=NULL,$time=3600)
	{
		$cacheParam=is_array($param1) || is_object($param1)?md5(json_encode($param1)):$param1;
		$cacheKey='product.'.$callFunc.$this->getBaseCache().'.'.$cacheParam;
		$cache = $this->cache->get($cacheKey);
		if($cache!==NULL && $cache!==false) return $cache;
		
		$data=!is_null($param1)?$this->$callFunc($param1):$this->$callFunc();
		if($data)
		{
			if(method_exists($this->cache,'setExpire')) $this->cache->setExpire($time); //10 minutes
			$this->cache->set($cacheKey,$data);
			if(method_exists($this->cache,'setExpire')) $this->cache->setExpire(3600); //reset
		}
		return $data;
	}
	
	public function getProduct($product_id)
	{
		return $this->checkCache('getProductOld',$product_id,600);
	}	  
		  ]]></add>
		</operation>
		<operation>
		  <search position="replace"><![CDATA[public function getTotalProducts(]]></search>
		  <add><![CDATA[public function getTotalProductsOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getTotalProductsOld(]]></search>
		  <add><![CDATA[
		public function getTotalProducts()
	{
		return $this->checkCache('getTotalProductsOld');
	}	
		  ]]></add>
		</operation>
		<operation>
		  <search position="replace"><![CDATA[public function getProducts(]]></search>
		  <add><![CDATA[public function getProductsOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getProductsOld(]]></search>
		  <add><![CDATA[
	public function getProducts($data = array())
	{
		return $this->checkCache('getProductsOld',$data,900);
	}	
		  ]]></add>
		</operation>
		<operation>
		  <search position="replace"><![CDATA[public function getCategories(]]></search>
		  <add><![CDATA[public function getCategoriesOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getCategoriesOld(]]></search>
		  <add><![CDATA[
	public function getCategories($product_id)
	{
		return $this->checkCache('getCategoriesOld',$product_id,600);
	}	
		  ]]></add>
		</operation>
		
		<operation>
		  <search position="replace"><![CDATA[public function getProductImages(]]></search>
		  <add><![CDATA[public function getProductImagesOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getProductImagesOld(]]></search>
		  <add><![CDATA[
	public function getProductImages($product_id)
	{
		return $this->checkCache('getProductImagesOld',$product_id,600);
	}	
		  ]]></add>
		</operation>
		
		<operation>
		  <search position="replace"><![CDATA[public function getPopularProducts(]]></search>
		  <add><![CDATA[public function getPopularProductsOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getPopularProductsOld(]]></search>
		  <add><![CDATA[
	public function getPopularProducts($limit)
	{
		return $this->checkCache('getPopularProductsOld',$limit);
	}	
		  ]]></add>
		</operation>
		
		<operation>
		  <search position="replace"><![CDATA[public function getProductRelated(]]></search>
		  <add><![CDATA[public function getProductRelatedOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getProductRelatedOld(]]></search>
		  <add><![CDATA[
	public function getProductRelated($product_id)
	{
		return $this->checkCache('getProductRelatedOld',$product_id);
	}	
		  ]]></add>
		</operation>		
	</file>
	
	<file path="catalog/model/catalog/category.php">
		<operation>
		  <search position="replace"><![CDATA[public function getCategories(]]></search>
		  <add><![CDATA[public function getCategoriesOld(]]></add>
		</operation>
		<operation>
		  <search position="before"><![CDATA[public function getCategoriesOld(]]></search>
		  <add><![CDATA[
	public function getCategories($parent_id = 0)
	{
		$cacheKey='category.getcategories.'.$parent_id;
		$rows = $this->cache->get($cacheKey);
		if(is_array($rows)) return $rows;
		
		$rows=$this->getCategoriesOld($parent_id);
		if(!empty($rows)) $this->cache->set($cacheKey,$rows);
		
		return $rows;
	}
		  ]]></add>
		</operation>
	</file>
</modification>